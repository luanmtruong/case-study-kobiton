---
title: "Case Study: Refactoring Legacy CI/CD Pipeline with GitHub Actions and IaC"
image: preview.png
format:
  revealjs:
    css: custom.css
    navigation-mode: vertical
    title-slide-no-content: true
    title-slide-attributes:
      data-background-image: preview.png
      data-background-transition: slide
---

# Case Study: Refactoring Legacy CI/CD Pipeline with GitHub Actions and IaC

# Background and Challenges

::: {.fragment}
- Overview of the legacy CI/CD pipeline
:::
::: {.fragment}
- Pain points and inefficiencies
:::
::: {.fragment}
- Need for modernization and cost reduction
:::

# Solution Overview

- Adoption of GitHub Actions for CI/CD
- Implementation of Infrastructure as Code (IaC)
- Introduction of GitOps principles

# GitHub Actions Implementation

- Key features utilized
- Workflow structure and organization
- Integration with existing systems

# Infrastructure as Code (IaC) Approach

- Tools and technologies used (e.g., Terraform, CloudFormation)
- Benefits of IaC in this context
- Example of infrastructure defined as code

# GitOps Implementation

- Explanation of GitOps principles applied
- Version control and automated deployments
- Improved collaboration and transparency

# Results - Time Savings

- Reduction in time to bring up new environments
- Decreased build times
- Quantitative comparison with the legacy system

# Results - Cost Savings

- ~50% reduction in AWS costs
- Breakdown of cost savings areas
- Resource optimization achievements

# Resource Efficiency

- Reduction in wasted resources
- Improved resource allocation and utilization
- Environmental impact (if applicable)

# Lessons Learned

- Key takeaways from the refactoring process
- Challenges faced and how they were overcome
- Best practices identified

# Future Improvements

- Planned enhancements to the new system
- Potential areas for further optimization
- Long-term strategy and goals

# Thank you

_Any questions?_

<br>
<br>
